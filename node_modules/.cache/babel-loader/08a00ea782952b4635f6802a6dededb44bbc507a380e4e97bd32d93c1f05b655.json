{"ast":null,"code":"import * as actionTypes from './actionTypes';\nimport axios from 'axios';\nexport const authSuccess = (token, userId) => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    payload: {\n      token: token,\n      userId: userId\n    }\n  };\n};\nexport const authFailed = errMsg => {\n  return {\n    type: actionTypes.AUTH_FAILED,\n    payload: errMsg\n  };\n};\nexport const authLoading = isLoading => {\n  return {\n    type: actionTypes.AUTH_LOADING,\n    payload: isLoading\n  };\n};\nexport const auth = (email, password, mode) => dispatch => {\n  dispatch(authLoading(true));\n  const authData = {\n    email: email,\n    password: password,\n    returnSecureToken: true\n  };\n  let authUrl = null;\n  if (mode === \"Sign Up\") {\n    authUrl = \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=\";\n  } else {\n    authUrl = \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=\";\n  }\n  const API_KEY = \"AIzaSyAjnxGv9V-p5qLUxXDNJIvOfKTCkB7Wdoc\";\n  axios.post(authUrl + API_KEY, authData).then(response => {\n    dispatch(authLoading(false));\n    localStorage.setItem('token', response.data.idToken);\n    localStorage.setItem('userId', response.data.localId);\n    const expirationTime = new Date(new Date().getTime() + response.data.expiresIn * 1000);\n    localStorage.setItem('expirationTime', expirationTime);\n    dispatch(authSuccess(response.data.idToken, response.data.localId));\n  }).catch(err => {\n    dispatch(authLoading(false));\n    dispatch(authFailed(err.response.data.error.message));\n  });\n};\nexport const logout = () => {\n  localStorage.removeItem('token');\n  localStorage.removeItem('expirationTime');\n  localStorage.removeItem('userId');\n  return {\n    type: actionTypes.AUTH_LOGOUT\n  };\n};\nexport const authCheck = () => dispatch => {\n  const token = localStorage.getItem('token');\n  if (!token) {\n    dispatch(logout());\n  } else {\n    const expirationTime = new Date(localStorage.getItem('expirationTime'));\n    if (expirationTime <= new Date()) {\n      dispatch(logout());\n    } else {\n      const userId = localStorage.getItem('userId');\n      dispatch(authSuccess(token, userId));\n    }\n  }\n};","map":{"version":3,"names":["actionTypes","axios","authSuccess","token","userId","type","AUTH_SUCCESS","payload","authFailed","errMsg","AUTH_FAILED","authLoading","isLoading","AUTH_LOADING","auth","email","password","mode","dispatch","authData","returnSecureToken","authUrl","API_KEY","post","then","response","localStorage","setItem","data","idToken","localId","expirationTime","Date","getTime","expiresIn","catch","err","error","message","logout","removeItem","AUTH_LOGOUT","authCheck","getItem"],"sources":["D:/JS/Bohubrihi/JavaScript/React/Apps/burgerBuilder/src/redux/authActionCreators.js"],"sourcesContent":["import * as actionTypes from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const authSuccess = (token, userId) => {\r\n    return {\r\n        type: actionTypes.AUTH_SUCCESS,\r\n        payload: {\r\n            token: token,\r\n            userId: userId,\r\n        }\r\n    }\r\n}\r\nexport const authFailed = (errMsg)=>{\r\n    return {\r\n        type: actionTypes.AUTH_FAILED,\r\n        payload: errMsg\r\n    }\r\n}\r\nexport const authLoading= (isLoading)=>{\r\n    return{\r\n        type: actionTypes.AUTH_LOADING,\r\n        payload: isLoading\r\n    }\r\n}\r\nexport const auth = (email, password, mode) => dispatch => {\r\n    dispatch(authLoading(true))\r\n    const authData = {\r\n        email: email,\r\n        password: password,\r\n        returnSecureToken: true,\r\n    }\r\n\r\n    let authUrl = null;\r\n    if (mode === \"Sign Up\") {\r\n        authUrl = \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=\";\r\n    } else {\r\n        authUrl = \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=\";\r\n    }\r\n    const API_KEY = \"AIzaSyAjnxGv9V-p5qLUxXDNJIvOfKTCkB7Wdoc\";\r\n    axios.post(authUrl + API_KEY, authData)\r\n        .then(response => {\r\n            dispatch(authLoading(false))\r\n            localStorage.setItem('token', response.data.idToken);\r\n            localStorage.setItem('userId', response.data.localId);\r\n            const expirationTime = new Date(new Date().getTime() + response.data.expiresIn * 1000);\r\n            localStorage.setItem('expirationTime', expirationTime);\r\n            dispatch(authSuccess(response.data.idToken, response.data.localId));\r\n        })\r\n        .catch((err)=>{\r\n            dispatch(authLoading(false))\r\n            dispatch(authFailed(err.response.data.error.message))\r\n        })\r\n}\r\n\r\nexport const logout = ()=>{\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('expirationTime');\r\n    localStorage.removeItem('userId');\r\n    return {\r\n        type: actionTypes.AUTH_LOGOUT,\r\n        \r\n    }\r\n}\r\n\r\nexport const  authCheck = ()=> dispatch=>{\r\n    const token = localStorage.getItem('token')\r\n    if(!token){\r\n        dispatch(logout())\r\n    }else{\r\n        const expirationTime = new Date(localStorage.getItem('expirationTime'));\r\n        if(expirationTime <= new Date()){\r\n            dispatch(logout())\r\n        }else{\r\n            const userId = localStorage.getItem('userId')\r\n            dispatch(authSuccess(token, userId))\r\n        }\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}