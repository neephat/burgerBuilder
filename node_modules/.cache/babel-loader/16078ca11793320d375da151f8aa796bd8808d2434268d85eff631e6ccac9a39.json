{"ast":null,"code":"import * as actionTypes from './actionTypes';\nexport const INGRIDENT_PRICES = {\n  salad: 20,\n  cheese: 50,\n  meat: 90\n};\nconst INITIAL_STATE = {\n  ingredients: [{\n    type: 'salad',\n    amount: 0\n  }, {\n    type: 'cheese',\n    amount: 0\n  }, {\n    type: 'meat',\n    amount: 0\n  }],\n  orders: [],\n  orderLoading: true,\n  orderErr: false,\n  totalPrice: 80,\n  purchasable: false,\n  onClickCheckout: false,\n  token: null,\n  userId: null,\n  authLoading: false,\n  authFailedMsg: null\n};\nexport const reducer = (state = INITIAL_STATE, action) => {\n  const ingredients = [...state.ingredients];\n  switch (action.type) {\n    case actionTypes.ADD_INGREDIENT:\n      for (let item of ingredients) {\n        if (item.type === action.payload) {\n          item.amount++;\n        }\n      }\n      return {\n        ...state,\n        ingredients: ingredients,\n        totalPrice: state.totalPrice + INGRIDENT_PRICES[action.payload]\n      };\n    case actionTypes.REMOVE_INGREDIENT:\n      for (let item of ingredients) {\n        if (item.type === action.payload) {\n          if (item.amount <= 0) return state;\n          item.amount--;\n        }\n      }\n      return {\n        ...state,\n        ingredients: ingredients,\n        totalPrice: state.totalPrice - INGRIDENT_PRICES[action.payload]\n      };\n    case actionTypes.UPDATE_PURCHASABLE:\n      const sum = state.ingredients.reduce((sum, element) => {\n        return sum + element.amount;\n      }, 0);\n      return {\n        ...state,\n        purchasable: sum > 0\n      };\n    case actionTypes.RESET_INGREDIENTS:\n      return {\n        ...state,\n        ingredients: [{\n          type: 'salad',\n          amount: 0\n        }, {\n          type: 'cheese',\n          amount: 0\n        }, {\n          type: 'meat',\n          amount: 0\n        }],\n        totalPrice: 80,\n        purchasable: false,\n        onClickCheckout: false\n      };\n    case actionTypes.LOAD_ORDERS:\n      let orders = [];\n      for (let key in action.payload) {\n        orders.push({\n          ...action.payload[key],\n          id: key\n        });\n      }\n      return {\n        ...state,\n        orders: orders,\n        orderLoading: false\n      };\n    case actionTypes.ORDER_LOAD_FAILED:\n      return {\n        ...state,\n        orderErr: true,\n        orderLoading: false\n      };\n    case actionTypes.AUTH_SUCCESS:\n      return {\n        ...state,\n        token: action.payload.token,\n        userId: action.payload.userId\n      };\n    case actionTypes.AUTH_LOGOUT:\n      return {\n        ...state,\n        token: null,\n        userId: null,\n        authFailedMsg: null\n      };\n    case actionTypes.AUTH_LOADING:\n      return {\n        ...state,\n        authLoading: action.payload\n      };\n    case actionTypes.AUTH_FAILED:\n      return {\n        ...state,\n        authFailedMsg: action.payload\n      };\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["actionTypes","INGRIDENT_PRICES","salad","cheese","meat","INITIAL_STATE","ingredients","type","amount","orders","orderLoading","orderErr","totalPrice","purchasable","onClickCheckout","token","userId","authLoading","authFailedMsg","reducer","state","action","ADD_INGREDIENT","item","payload","REMOVE_INGREDIENT","UPDATE_PURCHASABLE","sum","reduce","element","RESET_INGREDIENTS","LOAD_ORDERS","key","push","id","ORDER_LOAD_FAILED","AUTH_SUCCESS","AUTH_LOGOUT","AUTH_LOADING","AUTH_FAILED"],"sources":["D:/JS/Bohubrihi/JavaScript/React/Apps/burgerBuilder/src/redux/reducer.js"],"sourcesContent":["import * as actionTypes from './actionTypes'\r\n\r\nexport const INGRIDENT_PRICES = {\r\n    salad: 20,\r\n    cheese: 50,\r\n    meat: 90\r\n}\r\n\r\nconst INITIAL_STATE = {\r\n    ingredients: [\r\n        {type: 'salad', amount: 0},\r\n        {type: 'cheese', amount: 0},\r\n        {type: 'meat', amount: 0}\r\n    ],\r\n    orders: [\r\n\r\n    ],\r\n    orderLoading: true,\r\n    orderErr: false,\r\n    totalPrice: 80,\r\n    purchasable: false,\r\n    onClickCheckout: false,\r\n    token: null,\r\n    userId: null,\r\n    authLoading: false,\r\n    authFailedMsg: null\r\n}\r\n\r\nexport const reducer = (state=INITIAL_STATE, action)=>{\r\n    const ingredients = [...state.ingredients];\r\n\r\n    switch (action.type) {\r\n        case actionTypes.ADD_INGREDIENT:\r\n            for(let item of ingredients){\r\n                if(item.type === action.payload){\r\n                    item.amount++;\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                ingredients: ingredients,\r\n                totalPrice: state.totalPrice + INGRIDENT_PRICES[action.payload]\r\n            }\r\n        \r\n        case actionTypes.REMOVE_INGREDIENT:\r\n            for(let item of ingredients){\r\n                if(item.type === action.payload){\r\n                    if(item.amount <= 0) return state;\r\n                    item.amount--;\r\n                    \r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                ingredients: ingredients,\r\n                totalPrice: state.totalPrice - INGRIDENT_PRICES[action.payload]\r\n            }\r\n        \r\n        case actionTypes.UPDATE_PURCHASABLE:\r\n            const sum = state.ingredients.reduce((sum, element)=>{\r\n                return sum + element.amount\r\n            }, 0)\r\n            return {\r\n                ...state,\r\n                purchasable: sum >0\r\n            }\r\n        \r\n        case actionTypes.RESET_INGREDIENTS:\r\n            return {\r\n                ...state,\r\n                ingredients: [\r\n                    {type: 'salad', amount: 0},\r\n                    {type: 'cheese', amount: 0},\r\n                    {type: 'meat', amount: 0}\r\n                ],\r\n                totalPrice: 80,\r\n                purchasable: false,\r\n                onClickCheckout: false\r\n            }\r\n            \r\n        case actionTypes.LOAD_ORDERS:\r\n            let orders = []\r\n            for(let key in action.payload){\r\n                orders.push({\r\n                    ...action.payload[key],\r\n                    id: key\r\n                })\r\n            }\r\n            return {\r\n                ...state,\r\n                orders: orders,\r\n                orderLoading: false\r\n            }\r\n        case actionTypes.ORDER_LOAD_FAILED:\r\n            return {\r\n                ...state,\r\n                orderErr: true,\r\n                orderLoading: false\r\n            }\r\n        case actionTypes.AUTH_SUCCESS:\r\n            return {\r\n                ...state,\r\n                token: action.payload.token,\r\n                userId: action.payload.userId\r\n            }\r\n        case actionTypes.AUTH_LOGOUT:\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                userId: null,\r\n                authFailedMsg: null\r\n            }\r\n        case actionTypes.AUTH_LOADING:\r\n            return  {\r\n                ...state,\r\n                authLoading: action.payload\r\n            }\r\n        case actionTypes.AUTH_FAILED:\r\n            return{\r\n                ...state,\r\n                authFailedMsg: action.payload\r\n            }\r\n        default:\r\n            return state\r\n            \r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}